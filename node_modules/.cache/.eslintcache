[{"/home/murilo/Desktop/courses/mlodovico.github.io/src/index.js":"1","/home/murilo/Desktop/courses/mlodovico.github.io/src/reportWebVitals.js":"2","/home/murilo/Desktop/courses/mlodovico.github.io/src/pages/Home/index.jsx":"3","/home/murilo/Desktop/courses/mlodovico.github.io/src/components/Card/index.jsx":"4","/home/murilo/Desktop/courses/mlodovico.github.io/src/ling/pt-br.js":"5","/home/murilo/Desktop/courses/mlodovico.github.io/src/ling/en-us.js":"6","/home/murilo/Desktop/courses/mlodovico.github.io/src/ling/es-es.js":"7","/home/murilo/Desktop/courses/mlodovico.github.io/src/components/OptionsModal/index.jsx":"8"},{"size":341,"mtime":1694531710480,"results":"9","hashOfConfig":"10"},{"size":364,"mtime":1694530247313,"results":"11","hashOfConfig":"10"},{"size":8748,"mtime":1718206059327,"results":"12","hashOfConfig":"10"},{"size":255,"mtime":1704254845825,"results":"13","hashOfConfig":"10"},{"size":2620,"mtime":1715958835495,"results":"14","hashOfConfig":"10"},{"size":2490,"mtime":1715958823937,"results":"15","hashOfConfig":"10"},{"size":2684,"mtime":1715958830784,"results":"16","hashOfConfig":"10"},{"size":1258,"mtime":1704255498752,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"ej7904",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/home/murilo/Desktop/courses/mlodovico.github.io/src/index.js",[],[],[],"/home/murilo/Desktop/courses/mlodovico.github.io/src/reportWebVitals.js",[],[],"/home/murilo/Desktop/courses/mlodovico.github.io/src/pages/Home/index.jsx",["44"],[],"import React, { useState } from \"react\";\n\nimport { Player } from \"@lottiefiles/react-lottie-player\";\n\nimport {\n  AiFillGithub,\n  AiFillLinkedin,\n  AiOutlineFileText,\n  AiOutlineInstagram,\n} from \"react-icons/ai\";\nimport { FiAlignJustify } from \"react-icons/fi\";\nimport { GrDocumentPdf } from \"react-icons/gr\";\n\nimport \"./styles.css\";\n\nimport develop1 from \"../../assets/develop_1.json\";\nimport ProfileImage from \"../../assets/profile_image_square.jpeg\";\nimport ProfileFrontImage from \"../../assets/back-profile-image.jpeg\";\nimport degree from \"../../assets/degree.pdf\";\nimport webCourseJavascript from \"../../assets/webcourse-javascript.jpg\";\nimport javaSpringDegree from \"../../assets/java-spring-degree.pdf\";\nimport swiftDegree from \"../../assets/swift-degree.pdf\";\nimport ResumeEn from \"../../assets/resumeEn.pdf\";\nimport Resume from \"../../assets/resume.pdf\";\n\nimport { Card } from \"../../components/Card\";\nimport { OptionsModal } from \"../../components/OptionsModal\";\n\nimport { enUs } from \"../../ling/en-us\";\n\nfunction App() {\n  const [ling, setLing] = useState(enUs);\n  const [toggleModal, setToggleModal] = useState(false);\n\n  const handleSwitchBetweenLanguages = (langSelected) => {\n    setLing(langSelected);\n  };\n\n  const handleToggleResume = () => {\n    if (ling.type !== \"English\") {\n      return Resume;\n    } else {\n      return ResumeEn;\n    }\n  };\n\n  const techs = [\n    \"React\",\n    \"React Native\",\n    \"Node\",\n    \"Angular\",\n    \"Swift\",\n    \"Java\",\n    \"Python\",\n    \"JavaScript\",\n    \"Typescript\",\n    \"Nest\",\n    \"NextJS\",\n    \"Multicloud\",\n    \"Docker\",\n    \"Git\",\n    \"MySQL\",\n    \"MongoDB\",\n    \"Swagger\",\n    \"EC2\",\n    \"S3\",\n  ];\n\n  const projects = [\n    {\n      title: \"Petshop API\",\n      subtitle: ling.petshopDescription,\n      link: \"https://github.com/Mlodovico/petshop-backend-nest\",\n    },\n    {\n      title: \"Check Ins\",\n      subtitle: ling.checkInsDescription,\n      link: \"https://github.com/Mlodovico/check-ins\",\n    },\n    {\n      title: \"Go Barber\",\n      subtitle: ling.goBarberDescription,\n      link: \"https://github.com/Mlodovico/goBarber\",\n    },\n    {\n      title: \"Git Hunter\",\n      subtitle: ling.gitHunterDescription,\n      link: \"https://github.com/Mlodovico/gitHunter\",\n    },\n    {\n      title: \"Most Used Words\",\n      subtitle: ling.mostUsedWorldsDescription,\n      link: \"https://github.com/Mlodovico/most-used-words\",\n    },\n    {\n      title: \"Habits\",\n      subtitle: ling.habitsDescription,\n      link: \"https://github.com/Mlodovico/habits\",\n    },\n  ];\n\n  const degrees = [\n    {\n      title: ling.degree,\n      subtitle: ling.degreeDescription,\n      link: degree,\n    },\n    {\n      title: \"Web Course\",\n      subtitle: ling.webCourseDegreeDescription,\n      link: webCourseJavascript,\n    },\n    {\n      title: \"Swift\",\n      subtitle: ling.swiftDegreeDescription,\n      link: swiftDegree,\n    },\n    {\n      title: \"Java Spring\",\n      subtitle: ling.javaSpringDegreeDescription,\n      link: javaSpringDegree,\n    },\n    {\n      title: \"IntelliJ IDEA Tricks\",\n      subtitle: ling.intelliJCourseDescription,\n      link: degree,\n    },\n  ];\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"category-sector\">\n          <div>\n            <div className=\"data-sector\">\n              <img\n                className=\"profile-image\"\n                src={ProfileImage}\n                alt=\"Profile_Image\"\n              />\n              <div>\n                <p>Murilo Lodovico</p>\n                <p>{ling.firtsSubtitle}</p>\n                <p>{ling.yearsOld}</p>\n                <p>Campinas - SP/Brasil</p>\n              </div>\n            </div>\n\n            <div className=\"separator\" />\n\n            <h4 className=\"title\">{ling.socialMedia}</h4>\n            <div className=\"list\">\n              <a href=\"https://github.com/Mlodovico\">\n                <AiFillGithub\n                  style={{ marginRight: 5, verticalAlign: \"middle\" }}\n                />\n                Github\n              </a>\n              <a href=\"https://www.linkedin.com/in/murilo-lodovico-509398167/\">\n                <AiFillLinkedin\n                  style={{ marginRight: 5, verticalAlign: \"middle\" }}\n                />\n                Linkedin\n              </a>\n              <a href={handleToggleResume()}>\n                <AiOutlineFileText\n                  style={{ marginRight: 5, verticalAlign: \"middle\" }}\n                />\n                {ling.resume}\n              </a>\n            </div>\n\n            <div className=\"separator\" />\n\n            <h4 className=\"title\">{ling.knowledges}</h4>\n            <div className=\"knowledge\">\n              {techs.map((tech) => (\n                <p key={tech}>{tech}</p>\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className=\"mobile-sector-only\">\n          <img\n            className=\"profile-image\"\n            src={ProfileImage}\n            alt=\"Profile-Image\"\n          />\n          <div className=\"profile-text\">\n            <h4>Murilo Lodovico</h4>\n            <p>{ling.firtsSubtitle}</p>\n            <div className=\"profile-list\">\n              <a\n                className=\"link\"\n                style={{ background: \"black\" }}\n                href=\"https://github.com/Mlodovico\"\n              >\n                <span>\n                  <AiFillGithub size={20} style={{ marginRight: 5 }} /> Github\n                </span>\n              </a>\n              <a\n                className=\"link\"\n                href=\"https://www.linkedin.com/in/murilo-lodovico-509398167/\"\n              >\n                <span>\n                  <AiFillLinkedin size={20} style={{ marginRight: 5 }} />{\" \"}\n                  Linkedin\n                </span>\n              </a>\n              <a\n                style={{\n                  background: \"#833ab4\",\n                }}\n                className=\"link\"\n                href=\"https://instagram.com/mlodovico?igshid=OGQ5ZDc2ODk2ZA==\"\n              >\n                <span>\n                  <AiOutlineInstagram size={20} style={{ marginRight: 5 }} />{\" \"}\n                  Instagram\n                </span>\n              </a>\n            </div>\n          <div>\n            <a\n              className=\"resume-link\"\n              href={handleToggleResume()}\n            >\n              <span>\n                <GrDocumentPdf size={20} style={{ marginRight: 5 }} />{\" \"}\n                {ling.resume}\n              </span>\n            </a>\n          </div>\n          </div>\n          <div className=\"options-div\">\n            <button\n              className=\"options-button\"\n              onClick={() => setToggleModal(!toggleModal)}\n            >\n              <FiAlignJustify size={30} />\n            </button>\n          </div>\n\n          {toggleModal && (\n            <OptionsModal language={handleSwitchBetweenLanguages} />\n          )}\n        </div>\n\n        <div className=\"body-sector\">\n          <div className=\"options-div-web\">\n            <button\n              className=\"options-button\"\n              onClick={() => setToggleModal(!toggleModal)}\n            >\n              <FiAlignJustify size={30} />\n            </button>\n            {toggleModal && window.innerWidth >= 1000 && (\n              <OptionsModal language={handleSwitchBetweenLanguages} />\n            )}\n          </div>\n\n          <h3 className=\"title-body\">{ling.portfolio}</h3>\n          <p>{ling.secondDivFirstSubtitle}</p>\n          <p>{ling.secondDivFirstParagraph}</p>\n\n          <Player src={develop1} className=\"player\" loop autoplay />\n\n          <p>{ling.secondDivSecondParagraph}</p>\n          <div className=\"profile-front-image-view\">\n            <img\n              className=\"profile-image\"\n              src={ProfileFrontImage}\n              alt=\"Profile_Image\"\n            />\n          </div>\n\n          <div className=\"certificacion-container\">\n            <p>{ling.firstScrollviewCardCardTitle}</p>\n            <div className=\"card\">\n              {projects.map((project, index) => (\n                <Card\n                  key={index}\n                  title={project.title}\n                  subtitle={project.subtitle}\n                  link={project.link}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"certificacion-container\">\n            <p>{ling.secondScrollviewCardTitle}</p>\n            <div className=\"card\">\n              {degrees.map((degree, index) => (\n                <Card\n                  key={index}\n                  title={degree.title}\n                  subtitle={degree.subtitle}\n                  link={degree.link}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/murilo/Desktop/courses/mlodovico.github.io/src/components/Card/index.jsx",[],[],"/home/murilo/Desktop/courses/mlodovico.github.io/src/ling/pt-br.js",[],[],"/home/murilo/Desktop/courses/mlodovico.github.io/src/ling/en-us.js",[],[],"/home/murilo/Desktop/courses/mlodovico.github.io/src/ling/es-es.js",[],[],"/home/murilo/Desktop/courses/mlodovico.github.io/src/components/OptionsModal/index.jsx",[],[],{"ruleId":"45","severity":1,"message":"46","line":184,"column":11,"nodeType":"47","endLine":188,"endColumn":13},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]